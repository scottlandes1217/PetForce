<%= render 'shared/navbar_org' %>
<div class="builder-container">
  <div class="builder-body p-0">
    <div id="gjs" style="height: 80vh; min-height: 600px; width: 100vw; max-width: 100vw; margin-left: calc(-50vw + 50%);">
      <div style="text-align: center; padding: 20px; color: #666;">
        Loading form builder...
      </div>
    </div>
  </div>
</div>

<!-- GrapeJS CSS -->
<link rel="stylesheet" href="https://unpkg.com/grapesjs@0.21.7/dist/css/grapes.min.css">
<link rel="stylesheet" href="https://unpkg.com/grapesjs-preset-webpage@1.0.3/dist/grapesjs-preset-webpage.min.css">

<style>
  /* Canvas fills viewport minus navbar */
  #gjs {
    height: calc(100vh - 92px) !important;
    scroll-behavior: none;
    min-height: 600px !important;
    width: 100vw !important;
    max-width: 100vw !important;
    margin-left: calc(-50vw + 50%) !important;
  }
  #gjs .gjs-cv-canvas, #gjs .gjs-cv-canvas iframe, #gjs .gjs-cv-canvas iframe body {
    min-height: 600px !important;
  }
  .gjs-custom-btn {
    padding: 4px 0px !important;
    max-width: 20px !important;
  }
  html, body {
    overflow-x: hidden;
  }
</style>

<script src="https://unpkg.com/grapesjs@0.21.7/dist/grapes.min.js"></script>
<script src="https://unpkg.com/grapesjs-preset-webpage@1.0.3/dist/index.js"></script>

<script>
  function initGrapesJSBuilder() {
    // Only run if #gjs exists and not already initialized
    if (window.grapesjs && document.getElementById('gjs') && !window.gjsEditorInitialized) {
      window.gjsEditorInitialized = true;
      try {
        const editor = grapesjs.init({
          container: '#gjs',
          height: '100%',
          width: 'auto',
          storageManager: false,
          plugins: ['grapesjs-preset-webpage'],
          pluginsOpts: {
            'grapesjs-preset-webpage': {}
          },
          canvas: {
            styles: [
              'https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css',
              'https://unpkg.com/grapesjs-preset-webpage@1.0.3/dist/grapesjs-preset-webpage.min.css'
            ]
          }
        });

        editor.on('load', () => {
          // Set min-height on the canvas iframe and its body
          const setCanvasMinHeight = () => {
            const iframe = editor.Canvas.getFrameEl();
            if (iframe) {
              iframe.style.minHeight = '600px';
              iframe.style.height = '100%';
              if (iframe.contentDocument && iframe.contentDocument.body) {
                iframe.contentDocument.body.style.minHeight = '600px';
                iframe.contentDocument.body.style.height = '100%';
                iframe.contentDocument.body.style.overflow = 'hidden'; // Prevent scrolling
              }
            }
          };
          setCanvasMinHeight();
          // Use MutationObserver to keep min-height if GrapeJS changes it
          const iframe = editor.Canvas.getFrameEl();
          if (iframe && iframe.contentDocument) {
            const observer = new MutationObserver(setCanvasMinHeight);
            observer.observe(iframe.contentDocument.body, { attributes: true, childList: true, subtree: true });
          }
          editor.Commands.run('open-blocks');
        });

        // Add Save and Back buttons to the GrapeJS header (options panel)
        editor.Panels.addButton('options', [
          {
            id: 'save-form',
            className: 'fa fa-save gjs-custom-btn',
            label: '',
            command: 'save-form',
            attributes: { title: 'Save Form', style: 'font-weight: bold; padding: 0 8px;' }
          },
          {
            id: 'back-to-form',
            className: 'fa fa-arrow-left gjs-custom-btn',
            label: '',
            command: 'back-to-form',
            attributes: { title: 'Back to Form', style: 'font-weight: bold; padding: 0 8px;' }
          }
        ]);

        // Save command
        editor.Commands.add('save-form', {
          run(editor, sender) {
            sender && sender.set('active', 0);
            const html = editor.getHtml();
            const css = editor.getCss();
            const js = editor.getJs();
            fetch('<%= organization_form_path(@organization, @form, format: :json) %>', {
              method: 'PATCH',
              headers: {
                'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                'Content-Type': 'application/json',
                'Accept': 'application/json',
              },
              body: JSON.stringify({
                form: {
                  form_data: {
                    html: html,
                    css: css,
                    js: js
                  }
                }
              })
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                alert('Form saved successfully!');
              } else {
                alert('Error saving form: ' + data.errors);
              }
            })
            .catch(error => {
              console.error('Error:', error);
              alert('Error saving form');
            });
          }
        });

        // Back to form command
        editor.Commands.add('back-to-form', {
          run(editor, sender) {
            sender && sender.set('active', 0);
            window.location.href = '<%= organization_form_path(@organization, @form) %>';
          }
        });

        // Load existing form data if available
        <% if @form.form_data.present? && @form.form_html.present? %>
          editor.setComponents('<%= j @form.form_html.html_safe %>');
          <% if @form.form_css.present? %>
            editor.setStyle('<%= j @form.form_css.html_safe %>');
          <% end %>
        <% else %>
          editor.setComponents(`
            <div class="container">
              <div class="row">
                <div class="col-md-8 offset-md-2">
                  <form>
                    <h2 class="text-center mb-4">Form Title</h2>
                    <div class="mb-3">
                      <label for="name" class="form-label">Name</label>
                      <input type="text" class="form-control" id="name" name="name" required>
                    </div>
                    <div class="mb-3">
                      <label for="email" class="form-label">Email</label>
                      <input type="email" class="form-control" id="email" name="email" required>
                    </div>
                    <div class="mb-3">
                      <label for="message" class="form-label">Message</label>
                      <textarea class="form-control" id="message" name="message" rows="3"></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                  </form>
                </div>
              </div>
            </div>
          `);
        <% end %>
      } catch (error) {
        console.error('Error initializing GrapeJS:', error);
        document.getElementById('gjs').innerHTML = '<div style="text-align: center; padding: 20px; color: red;">Error loading form builder: ' + error.message + '</div>';
      }
    }
  }

  document.addEventListener('turbo:load', initGrapesJSBuilder);
  document.addEventListener('DOMContentLoaded', initGrapesJSBuilder);
  document.addEventListener('turbo:before-cache', function() {
    window.gjsEditorInitialized = false;
  });
</script>
